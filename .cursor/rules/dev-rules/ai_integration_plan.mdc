---
description:
globs:
alwaysApply: false
---
# AI連携と将来構想リスト

## 1. 資料からのスケジュール自動設計 (AI活用)

- **目標**: アップロードされた資料 (テキスト、画像など) をAIが解析し、タスクリスト、担当者、期間、依存関係を自動で抽出・設計し、ガントチャートの草案を生成する。
- **主要技術要素**:
    - OCR API (画像資料の場合: Google Cloud Vision API, Azure AI Vision等)
    - 大規模言語モデル (LLM) API (OpenAI GPTシリーズ, Google Gemini, Anthropic Claude等)
    - プロンプトエンジニアリング (LLMへの指示最適化)
    - バックエンドAPI (Hono on Cloudflare Workers)
    - データベース (Cloudflare D1)

## 2. 会議議事録からのガントチャート自動更新 (AI活用)

- **目標**: 会議の議事録 (テキスト) をAIが解析し、既存タスクの進捗更新、期間変更、新規タスクの追加、完了処理などを自動で行い、ガントチャートを最新の状態に保つ。
- **主要技術要素**:
    - LLM API
    - 差分検出ロジック
    - データベース更新処理
    - フロントエンドへのリアルタイム更新通知 (WebSocket等)

## 3. システム全体の構成要素 (想定)

- **フロントエンド**: HTML/CSS/JS (現状ベース) + 必要に応じてReact, Vue等。インタラクティブなガントチャートライブラリ。
- **バックエンド**: Hono on Cloudflare Workers (APIエンドポイント提供)。
- **データベース**: Cloudflare D1 (プロジェクトデータ、タスクデータ、ユーザー情報等)。
- **ファイルストレージ**: Cloudflare R2 (アップロードされた資料等)。
- **非同期処理**: Cloudflare Queues (時間のかかるAI処理)。
- **認証・認可**: Cloudflare Access等 (ユーザー管理)。

## 4. その他検討事項・拡張案

- より高度なAIによるスケジュール最適化提案。
- プロジェクトパフォーマンスに関する分析・レポーティング機能。
- 他のプロジェクト管理ツールやコミュニケーションプラットフォーム (Slack, Teams等) との連携。
- モバイルアプリケーション化。
- スケジュール管理エージェントとしての自律的な提案・調整機能。
- **Wrangler設定ファイル**: `wrangler.jsonc` を使用する。(Cloudflare Pagesプロジェクトとの整合性のため)

## 5. 通知機能 (Chatwork連携)

- **目標**: プロジェクトの進捗状況や期限に関するアラートをChatworkに自動通知する。
- **具体的な通知内容**:
    - **定時進捗報告**: 設定された時刻に、プロジェクト全体の進捗サマリーや遅延タスクなどをChatworkの指定チャンネルに通知。
    - **期限アラート**: タスクの期限が迫っている場合（例: 3日前、1日前、当日など）、担当者や関連メンバーにChatworkでメンション付きで通知。
    - **タスク更新通知**: タスクのステータス変更（新規作成、完了、担当者変更など）があった場合にリアルタイムまたは定期的にChatworkに通知（オプション）。
- **主要技術要素**:
    - Chatwork API (メッセージ送信、ユーザー情報取得等)
    - スケジューラ機能 (Cloudflare Workers Cron Triggers 等を利用して定時実行)
    - 通知条件判定ロジック (データベースのタスク情報を元に判断)
    - APIトークンの安全な管理 (Cloudflare Secrets等)
    - ユーザーごとの通知設定（オプション）

## 6. インタラクティブなガントチャート操作

- **目標**: ユーザーが直感的にガントチャートを操作し、タスクの詳細情報を簡単に確認できるようにする。
- **具体的な機能**:
    - **ドラッグ＆ドロップによるタスク移動**: タスクバーをドラッグして開始日・終了日をまとめて変更する。
    - **タスク期間の変更**: タスクバーの端をドラッグして期間（開始日または終了日）を伸縮する。
    - **タスク詳細・コメント表示**: 各タスクに（外部リンクまたは内部的な）リンクを設定可能にし、クリックすると関連情報やコメントモーダル等が表示されるようにする。
    - **依存関係の視覚的設定**: タスク間に依存関係の線を描画し、ドラッグ操作で設定・変更できるようにする（高度）。
- **主要技術要素**:
    - JavaScriptイベント処理 (mousedown, mousemove, mouseup, click)
    - DOM操作によるリアルタイムなUI更新
    - タッチデバイス対応（オプション）
    - 変更内容のバックエンドへの保存 (API経由でデータベース更新)
    - コメント機能用のデータモデルとUI
